# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\aless\Desktop\uiFILEs\PaginaHome.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import random

from PyQt5.QtWidgets import QApplication, QWidget
from PyQt5 import QtCore, QtGui, QtWidgets
import datetime
from datetime import date
import mysql.connector

class Ui_HomePage(object):
        def setupUi(self, HomePage):
                HomePage.setObjectName("HomePage")
                HomePage.resize(840, 571)
                HomePage.setStyleSheet("background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiHome/SfondoHomePage.png);\n"
                                       "background-repeat: no-repeat; ")
                self.ButtonMagazzino = QtWidgets.QPushButton(HomePage)
                self.ButtonMagazzino.setGeometry(QtCore.QRect(140, 200, 221, 41))
                self.ButtonMagazzino.setMinimumSize(QtCore.QSize(71, 41))
                self.ButtonMagazzino.setMaximumSize(QtCore.QSize(16777215, 41))
                self.ButtonMagazzino.setStyleSheet("background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiHome/ButtonMagazzino.png);\n"
                                                   "border: 2px solid black;\n"
                                                   "border-radius: 10px;\n"
                                                   "border-color: #20730b;")
                self.ButtonMagazzino.setText("")
                self.ButtonMagazzino.setCheckable(False)
                self.ButtonMagazzino.setObjectName("ButtonMagazzino")
                self.ButtonScontrini = QtWidgets.QPushButton(HomePage)
                self.ButtonScontrini.setGeometry(QtCore.QRect(460, 200, 221, 41))
                self.ButtonScontrini.setMinimumSize(QtCore.QSize(71, 41))
                self.ButtonScontrini.setMaximumSize(QtCore.QSize(16777215, 41))
                self.ButtonScontrini.setStyleSheet("background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiHome/ButtonScontrini.png);\n"
                                                   "border: 2px solid black;\n"
                                                   "border-radius: 10px;\n"
                                                   "border-color: #20730b;")
                self.ButtonScontrini.setText("")
                self.ButtonScontrini.setCheckable(False)
                self.ButtonScontrini.setObjectName("ButtonScontrini")
                self.ButtonHome = QtWidgets.QPushButton(HomePage)
                self.ButtonHome.setGeometry(QtCore.QRect(300, 480, 221, 41))
                self.ButtonHome.setMinimumSize(QtCore.QSize(71, 41))
                self.ButtonHome.setMaximumSize(QtCore.QSize(16777215, 41))
                self.ButtonHome.setStyleSheet("background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiHome/ButtonLogout.png);\n"
                                              "border: 2px solid black;\n"
                                              "border-radius: 10px;\n"
                                              "border-color: #20730b;")
                self.ButtonHome.setText("")
                self.ButtonHome.setCheckable(False)
                self.ButtonHome.setObjectName("ButtonHome")
                self.ButtoOrdini = QtWidgets.QPushButton(HomePage)
                self.ButtoOrdini.setGeometry(QtCore.QRect(460, 260, 221, 41))
                self.ButtoOrdini.setMinimumSize(QtCore.QSize(71, 41))
                self.ButtoOrdini.setMaximumSize(QtCore.QSize(16777215, 41))
                self.ButtoOrdini.setStyleSheet("background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiHome/ButtonOrdini.png);\n"
                                               "border: 2px solid black;\n"
                                               "border-radius: 10px;\n"
                                               "border-color: #20730b;")
                self.ButtoOrdini.setText("")
                self.ButtoOrdini.setCheckable(False)
                self.ButtoOrdini.setObjectName("ButtoOrdini")
                self.ButtonDipendenti = QtWidgets.QPushButton(HomePage)
                self.ButtonDipendenti.setGeometry(QtCore.QRect(460, 320, 221, 41))
                self.ButtonDipendenti.setMinimumSize(QtCore.QSize(71, 41))
                self.ButtonDipendenti.setMaximumSize(QtCore.QSize(16777215, 41))
                self.ButtonDipendenti.setStyleSheet("background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiHome/ButtonDipendenti.png);\n"
                                                    "border: 2px solid black;\n"
                                                    "border-radius: 10px;\n"
                                                    "border-color: #20730b;")
                self.ButtonDipendenti.setText("")
                self.ButtonDipendenti.setCheckable(False)
                self.ButtonDipendenti.setObjectName("ButtonDipendenti")
                self.ButtonPrenotazioni = QtWidgets.QPushButton(HomePage)
                self.ButtonPrenotazioni.setGeometry(QtCore.QRect(140, 260, 221, 41))
                self.ButtonPrenotazioni.setMinimumSize(QtCore.QSize(71, 41))
                self.ButtonPrenotazioni.setMaximumSize(QtCore.QSize(16777215, 41))
                self.ButtonPrenotazioni.setStyleSheet("background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiHome/ButtonPrenotazioni.png);\n"
                                                      "border: 2px solid black;\n"
                                                      "border-radius: 10px;\n"
                                                      "border-color: #20730b;")
                self.ButtonPrenotazioni.setText("")
                self.ButtonPrenotazioni.setCheckable(False)
                self.ButtonPrenotazioni.setObjectName("ButtonPrenotazioni")
                self.ButtonFidelity = QtWidgets.QPushButton(HomePage)
                self.ButtonFidelity.setGeometry(QtCore.QRect(140, 320, 221, 41))
                self.ButtonFidelity.setMinimumSize(QtCore.QSize(71, 41))
                self.ButtonFidelity.setMaximumSize(QtCore.QSize(16777215, 41))
                self.ButtonFidelity.setStyleSheet("background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiHome/ButtonFidelity.png);\n"
                                                  "border: 2px solid black;\n"
                                                  "border-radius: 10px;\n"
                                                  "border-color: #20730b;")
                self.ButtonFidelity.setText("")
                self.ButtonFidelity.setCheckable(False)
                self.ButtonFidelity.setObjectName("ButtonFidelity")

                self.ButtonProdotti = QtWidgets.QPushButton(HomePage)
                self.ButtonProdotti.setGeometry(QtCore.QRect(460, 380, 221, 41))
                self.ButtonProdotti.setMinimumSize(QtCore.QSize(71, 41))
                self.ButtonProdotti.setMaximumSize(QtCore.QSize(16777215, 41))
                self.ButtonProdotti.setStyleSheet(
                        "background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiHome/ButtonProdotti.png);\n"
                        "border: 2px solid black;\n"
                        "border-radius: 10px;\n"
                        "border-color: #20730b;")
                self.ButtonProdotti.setText("")
                self.ButtonProdotti.setCheckable(False)
                self.ButtonProdotti.setObjectName("ButtonProdotti")

                self.ButtonStatistiche = QtWidgets.QPushButton(HomePage)
                self.ButtonStatistiche.setGeometry(QtCore.QRect(140, 380, 221, 41))
                self.ButtonStatistiche.setMinimumSize(QtCore.QSize(71, 41))
                self.ButtonStatistiche.setMaximumSize(QtCore.QSize(16777215, 41))
                self.ButtonStatistiche.setStyleSheet(
                        "background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiHome/ButtonStatistiche.png);\n"
                        "border: 2px solid black;\n"
                        "border-radius: 10px;\n"
                        "border-color: #20730b;")
                self.ButtonStatistiche.setText("")
                self.ButtonStatistiche.setCheckable(False)
                self.ButtonStatistiche.setObjectName("ButtonStatistiche")

                self.fakeButton = QtWidgets.QPushButton(HomePage)
                self.fakeButton.setGeometry(QtCore.QRect(640, 10, 180, 40))
                self.fakeButton.setStyleSheet(
                        "background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiStatistiche/ButtonHome.png);\n"
                        "border: 2px solid black;\n"
                        "border-radius: 10px;\n"
                        "border-color: #20730b;\n"
                        "background-repeat: no-repeat;")

                self.listaNotifiche = []

                self.caricaNotifiche()

                self.fakeButton.clicked.connect(self.visualizzaNotifiche)

                self.lista = QtWidgets.QListWidget(HomePage)
                self.lista.addItems(self.listaNotifiche)
                self.lista.setGeometry(QtCore.QRect(640, 50, 180, 200))
                self.lista.setStyleSheet(
                        "border: 2px solid black;\n"
                        "border-radius: 10px;\n"
                        "border-color: #20730b;\n"
                        "background: white; \n"
                        "background-repeat: no-repeat;")

                self.lista.setVisible(bool(0))

                self.retranslateUi(HomePage)

                QtCore.QMetaObject.connectSlotsByName(HomePage)

        def retranslateUi(self, HomePage):
                _translate = QtCore.QCoreApplication.translate
                HomePage.setWindowTitle(_translate("HomePage", "Form"))

        def visualizzaNotifiche(self):
                if self.lista.isVisible():
                        self.lista.setVisible(bool(0))
                else:
                        self.lista.setVisible(bool(1))
                        
//NOTIFICA I DATI DI UN PRODOTTO INVENDUTO E NE INDICA LA DATA ODIERNA E LA DATA DELL'ULTIMA VENDITA
        def caricaNotifiche(self):
                mydb = mysql.connector.connect(host="localhost", user="alessio", password="alessio", database="prova")
                mycursor = mydb.cursor()

                dataOdierna = date.today().isoformat()
                dataPassata = (date.today() + datetime.timedelta(days=(-14))).isoformat()
                queryProdottiInvenduti = "SELECT prodotto.IDProdotto, prodotto.DataUltimaVendita FROM prodotto WHERE prodotto.DataUltimaVendita = '' OR prodotto.DataUltimaVendita NOT BETWEEN '"+dataPassata+"' AND '"+dataOdierna+"'"
                mycursor.execute(queryProdottiInvenduti)
                risultatoQueryProdottiInvenduti = mycursor.fetchall()

                if risultatoQueryProdottiInvenduti.__sizeof__()>0:
                        self.fakeButton.setStyleSheet("background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiHome/NotificheConCampana.png);\n"
                                                      "border: 2px solid black;\n"
                                                      "border-radius: 10px;\n"
                                                      "border-color: #20730b;\n"
                                                      "background-repeat: no-repeat;")
                else:
                        self.fakeButton.setStyleSheet("background-image: url(C:/Users/aless/Desktop/uiFILEs/ImmaginiHome/NotificheSenzaCampana.png);\n"
                                                      "border: 2px solid black;\n"
                                                      "border-radius: 10px;\n"
                                                      "border-color: #20730b;\n"
                                                      "background-repeat: no-repeat;")

                self.caricaConsigliSconto(risultatoQueryProdottiInvenduti)

                //SERVE A CONSIGLIARE LA PERCENTUALE DI SCONTO DA APPLICARE AD UN PRODOTTO INVENDUTO
        def caricaConsigliSconto(self, lista):
                listaConsigli = []
                for row in lista:

                        percentuale = random.randrange(15, 26)

                        consiglio = "CODICE PRODOTTO: "+str(row[0])+"   SCONTO CONSIGLIATO: "+str(percentuale)+"%"
                        listaConsigli.append(consiglio)

                self.listaNotifiche = listaConsigli


if __name__ == "__main__":
        import sys
        app = QtWidgets.QApplication(sys.argv)
        HomePage = QtWidgets.QWidget()
        ui = Ui_HomePage()
        ui.setupUi(HomePage)
        HomePage.show()
        sys.exit(app.exec_())
