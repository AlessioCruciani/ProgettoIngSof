# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\aless\Desktop\uiFILEs\PaginaFidelity.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import mysql.connector
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_PaginaFidelity(object):
    def setupUi(self, PaginaFidelity):
        PaginaFidelity.setObjectName("PaginaFidelity")
        PaginaFidelity.resize(840, 571)
        PaginaFidelity.setStyleSheet("background-image: url(ImmaginiProgetto/ImmaginiFidelity/SfondoFidelityPage.png);")
        self.TableFidelity = QtWidgets.QTableWidget(PaginaFidelity)
        self.TableFidelity.setGeometry(QtCore.QRect(100, 220, 621, 221))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TableFidelity.sizePolicy().hasHeightForWidth())
        self.TableFidelity.setSizePolicy(sizePolicy)
        self.TableFidelity.setStyleSheet(
            "background-color: rgb(122, 122, 122);\n"
            "alternate-background-color: rgb(218, 218, 218);\n"
            "background: none;\n"
            "border: 2px solid white;\n"
            "border-bottom-color: #20730b;\n"
            "\n"
            "")


        self.TableFidelity.setObjectName("TableFidelity")
        self.TableFidelity.setColumnCount(6)
        item = QtWidgets.QTableWidgetItem()

        self.TableFidelity.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableFidelity.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableFidelity.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableFidelity.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableFidelity.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.TableFidelity.setHorizontalHeaderItem(5, item)
        self.ButtonAggiungi = QtWidgets.QPushButton(PaginaFidelity)
        self.ButtonAggiungi.setGeometry(QtCore.QRect(100, 500, 221, 40))
        self.ButtonAggiungi.setStyleSheet("background-position: center;\n"
                                          "background-image: url(ImmaginiProgetto/ImmaginiFidelity/ButtonAggiungiFidelity.png);\n"
                                          "border: 2px solid black;\n"
                                          "border-radius: 10px;\n"
                                          "border-color: #20730b;")
        self.ButtonAggiungi.setText("")
        self.ButtonAggiungi.setObjectName("ButtonAggiungi")
        self.ButtonCerca = QtWidgets.QPushButton(PaginaFidelity)
        self.ButtonCerca.setGeometry(QtCore.QRect(500, 160, 220, 40))
        self.ButtonCerca.setStyleSheet("background-position: center;\n"
                                       "background-image: url(ImmaginiProgetto/ImmaginiFidelity/ButtonCercaFidelity.png);\n"
                                       "border: 2px solid black;\n"
                                       "border-radius: 10px;\n"
                                       "border-color: #20730b;")
        self.ButtonCerca.setText("")
        self.ButtonCerca.setObjectName("ButtonCerca")
        self.ButtonHome = QtWidgets.QPushButton(PaginaFidelity)
        self.ButtonHome.setGeometry(QtCore.QRect(500, 500, 220, 40))
        self.ButtonHome.setStyleSheet("background-position: center;\n"
                                      "background-image: url(ImmaginiProgetto/ImmaginiFidelity/ButtonHome.png);\n"
                                      "border: 2px solid black;\n"
                                      "border-radius: 10px;\n"
                                      "border-color: #20730b;")
        self.ButtonHome.setText("")
        self.ButtonHome.setObjectName("ButtonHome")
        #self.textEdit = QtWidgets.QTextEdit(PaginaFidelity)
        self.labelEdit = QtWidgets.QLabel(PaginaFidelity)
        self.lineEdit = QtWidgets.QLineEdit(PaginaFidelity)
        #self.textEdit.setGeometry(QtCore.QRect(100, 160, 381, 41))
        self.lineEdit.setGeometry(QtCore.QRect(100,160,381,41))
        font = QtGui.QFont()
        font.setFamily("OpenSymbol")
        font.setPointSize(14)
        #self.textEdit.setFont(font)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background: none;\n"
                                    "border: 2px solid black;\n"
                                    "border-radius: 5px;\n"
                                    "border-color: #20730b;\n"
                                    "text-align: center;")
        self.lineEdit.setObjectName("textEdit")

        self.TableFidelity.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)

        self.caricaDatiFidelity()
        self.ButtonCerca.clicked.connect(self.cercaFidelityCard)
        #self.ButtonAggiungi.clicked.connect(self.aggiungiFidelityCard)

        self.retranslateUi(PaginaFidelity)
        QtCore.QMetaObject.connectSlotsByName(PaginaFidelity)




    def cercaFidelityCard(self):
        richiesta = self.lineEdit.text()
        mydb = mysql.connector.connect(
            host="localhost",
            user="alessio",
            password="alessio",
            database="prova"
        )

        mycursor = mydb.cursor()
        queryRicercaFidelity = "SELECT * FROM fidelitycard WHERE fidelitycard.Nome = '" + richiesta + "' OR fidelitycard.Cognome = '" + richiesta +"' OR fidelitycard.IdFidelityCard ='" + richiesta + "'"

        mycursor.execute(queryRicercaFidelity)
        risultatoRicercaFidelity = mycursor.fetchall()

        rigaTabella = 0
        righeTotali = 0

        for row in risultatoRicercaFidelity:
            righeTotali += 1

        self.TableFidelity.setRowCount(righeTotali)

        for row in risultatoRicercaFidelity:
            self.TableFidelity.verticalHeader().setVisible(bool(0))
            self.TableFidelity.setItem(rigaTabella, 0, QtWidgets.QTableWidgetItem(str(row[0])))
            self.TableFidelity.setItem(rigaTabella, 1, QtWidgets.QTableWidgetItem(row[1]))
            self.TableFidelity.setItem(rigaTabella, 2, QtWidgets.QTableWidgetItem(row[2]))
            self.TableFidelity.setItem(rigaTabella, 3, QtWidgets.QTableWidgetItem(row[3]))
            self.TableFidelity.setItem(rigaTabella, 4, QtWidgets.QTableWidgetItem(str(row[4])))
            self.TableFidelity.setItem(rigaTabella, 5, QtWidgets.QTableWidgetItem(str(row[5])))

            rigaTabella += 1

    def caricaDatiFidelity(self):

        mydb = mysql.connector.connect(
            host="localhost",
            user="alessio",
            password="alessio",
            database="prova"
        )

        mycursor = mydb.cursor()

        queryTableFidelity = "SELECT * FROM fidelitycard"
        mycursor.execute(queryTableFidelity)
        risultatoQueryFidelity = mycursor.fetchall()
        rigaTabella = 0
        righeTotali = 0

        for row in risultatoQueryFidelity:
            righeTotali+=1

        self.TableFidelity.setRowCount(righeTotali)

        for row in risultatoQueryFidelity:
            self.TableFidelity.verticalHeader().setVisible(bool(0))
            self.TableFidelity.setItem(rigaTabella, 0, QtWidgets.QTableWidgetItem(str(row[0])))
            self.TableFidelity.setItem(rigaTabella, 1, QtWidgets.QTableWidgetItem(row[1]))
            self.TableFidelity.setItem(rigaTabella, 2, QtWidgets.QTableWidgetItem(row[2]))
            self.TableFidelity.setItem(rigaTabella, 3, QtWidgets.QTableWidgetItem(row[3]))
            self.TableFidelity.setItem(rigaTabella, 4, QtWidgets.QTableWidgetItem(str(row[4])))
            self.TableFidelity.setItem(rigaTabella, 5, QtWidgets.QTableWidgetItem(str(row[5])))

            rigaTabella += 1

    def retranslateUi(self, PaginaFidelity):
        _translate = QtCore.QCoreApplication.translate
        PaginaFidelity.setWindowTitle(_translate("PaginaFidelity", "Form"))
        item = self.TableFidelity.horizontalHeaderItem(0)
        item.setText(_translate("PaginaFidelity", " Codice Tessera "))
        item = self.TableFidelity.horizontalHeaderItem(1)
        item.setText(_translate("PaginaFidelity", " Nome "))
        item = self.TableFidelity.horizontalHeaderItem(2)
        item.setText(_translate("PaginaFidelity", " Cognome "))
        item = self.TableFidelity.horizontalHeaderItem(3)
        item.setText(_translate("PaginaFidelity", " Email "))
        item = self.TableFidelity.horizontalHeaderItem(4)
        item.setText(_translate("PaginaFidelity", " Telefono "))
        item = self.TableFidelity.horizontalHeaderItem(5)
        item.setText(_translate("PaginaFidelity", " Saldo "))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    PaginaFidelity = QtWidgets.QWidget()
    ui = Ui_PaginaFidelity()
    ui.setupUi(PaginaFidelity)
    PaginaFidelity.show()
    sys.exit(app.exec_())

